[package]
id = "j6wtadrs2qgnvijqpadk336bkb2xsezr"
name = "days_and_knights"
version = "0.0.1"
content = { type = "Playable" }
ambient_version = "0.3.1"

[dependencies]
orbit_camera = { deployment = "16errWVktnKFdrbFofKCAE" }
unit_schema = { deployment = "hfv4W9UuED197vKDfol7g" }
character_movement = { deployment = "2TMMtfgQwAplpQtmAfyzci" }

[messages.ClientRequest.fields]
join = "Bool"
disconnect = "Bool"

[messages.ServerResponse.fields]
accepted = "Bool"

[messages.Movement.Input]
descritpion = "Input messages for heros movement"

[messages.Movement.fields]
screen_ray_origin = "Vec3"
screen_ray_direction = "Vec3"
move_direction = "Vec2"

[messages.Action.Input]
descritpion = "Input messages for heros actions"

[messages.Action.fields]
attack = "Bool"
drink = "Bool"
interact = "Bool"
jump = "Bool"
sprint = "Bool"

[enums.PhysicsLayer]
descritpion = "Physics layers"
members = { Ground = "Ground", Character = "Character", Interactable = "Interactable" }

[components]
physics_layer = { type = "PhysicsLayer", name = "Physics Layers Component", description = "Physics layers used to filter physics collisions", attributes = ["Debuggable"] }
is_hero = { type = "Empty", attributes = ["Debuggable", "Networked"] }
is_skeleton = { type = "Empty", attributes = ["Debuggable", "Networked"] }
drinking = { type = "Bool", name = "Drinking Component", description = "Component used to indicate that character is drinking", attributes = ["Debuggable"] }
interacting = { type = "Bool", name = "Interacting Component", description = "Component used to indicate that character is interacting", attributes = ["Debuggable"] }
moving = { type = "Bool", name = "Moving Component", description = "Component used to indicate that character is moving", attributes = ["Debuggable"] }
attacking = { type = "Bool", name = "Attacking Component", description = "Component used to indicate that character is attacking", attributes = ["Debuggable"] }
locomotion_remaining_time = { type = "F32", name = "Locomotion Remaining Time Component", description = "Component used to indicate how much time is left for locomotion", attributes = ["Debuggable"] }
health = { type = "F32", name = "Health", description = "This game object's health. \"Standard\" health is 100 HP.", attributes = ["Debuggable", "Networked",] }
max_health = { type = "F32", name = "Max Health", description = "Maximum health of the object. 100 HP is \"standard.\"", attributes = ["Debuggable", "Networked",] }

[concepts.Hero]
name = "Hero"
description = "Hero is a playable character"
[concepts.Hero.components.required]
is_hero = { suggested = {} }
drinking = { suggested = false }
interacting = { suggested = false }
moving = { suggested = false }
attacking = { suggested = false }

[concepts.Skeleton]
name = "Skeleton"
description = "Skeleton is a non-playable character"
[concepts.Skeleton.components.required]
is_skeleton = { suggested = {} }
health = { suggested = 100.0 }
max_health = { suggested = 100.0 }
